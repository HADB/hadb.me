@import 'tailwindcss' theme(static);
@import '@nuxt/ui';
@plugin '@tailwindcss/typography';
@import './artalk.css';

@utility divided {
  > *:not(:last-child)::after {
    @apply content-['|'] mx-2 font-sans text-sm font-normal leading-normal pointer-events-none select-none text-slate-400;
  }
  .dark & > *:not(:last-child)::after {
    @apply text-slate-600;
  }
}

@utility prose {
  a:not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply no-underline border-b text-inherit hover:text-primary-500;
  }

  blockquote p:first-of-type::before,
  blockquote p:last-of-type::after {
    @apply content-none;
  }

  p,
  li:not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-justify break-all sm:break-normal sm:break-words;
  }

  img:not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-8 mb-8 rounded-md outline outline-solid outline-slate-200 dark:outline-slate-700 max-w-full ml-auto mr-auto;
  }

  h1 {
    @apply text-2xl mb-6;
  }

  h2 {
    @apply text-xl;
  }

  h3 {
    @apply text-lg;
  }

  h4 {
    @apply text-base;
  }
}

@utility prose-slate {
  --tw-prose-pre-bg: theme(color.slate.100);
  --tw-prose-invert-pre-bg: theme(color.slate.900);
  --tw-prose-pre-code: theme(color.slate.800);
  --tw-prose-invert-pre-code: theme(color.slate.200);
  --tw-prose-links: theme(color.primary.500);
  --tw-prose-invert-links: theme(color.primary.400);
  --tw-prose-borders: theme(color.slate.200);
  --tw-prose-invert-borders: theme(color.slate.700);
}

@utility contains-task-list {
  .task-list-item {
    @apply relative pl-10;
    input[type='checkbox'] {
      @apply appearance-none absolute top-1/2 left-2 -mt-2 bg-transparent;
      @apply before:cursor-pointer before:block before:w-4 before:h-4 before:leading-4 before:text-center before:rounded-sm before:bg-transparent before:ring-1 before:ring-slate-300 dark:before:ring-slate-600 before:text-primary-500;
      @apply checked:before:content-['✓'] enabled:hover:before:ring-primary-500 checked:enabled:before:bg-primary-500 checked:enabled:before:ring-primary-500 checked:enabled:before:text-white;
      @apply disabled:before:cursor-default;
    }
  }
}

@layer base {
  html.dark .light-image,
  html.light .dark-image {
    display: none;
  }
  body {
    @apply bg-slate-50 text-slate-700 dark:bg-slate-900 dark:text-slate-300 subpixel-antialiased;
  }
  a:not(.prose a, .app-navbar a) {
    @apply no-underline text-current border-solid border-primary-500 dark:border-primary-400 hover:border-b hover:text-primary-500 dark:hover:text-primary-400;
  }
  button:not(:disabled),
  [role='button']:not(:disabled) {
    cursor: pointer;
  }
  th:not([align]) {
    @apply text-left;
  }
  .font-fangsong {
    font-family: 'LXGW WenKai GB', 'LXGW WenKai', '仿宋', 'FangSong', 'STFangsong', 'serif';
  }
}

@theme {
  --color-primary-50: oklch(0.979 0.021 166.113);
  --color-primary-100: oklch(0.95 0.052 163.051);
  --color-primary-200: oklch(0.905 0.093 164.15);
  --color-primary-300: oklch(0.845 0.143 164.978);
  --color-primary-400: oklch(0.765 0.177 163.223);
  --color-primary-500: oklch(0.696 0.17 162.48);
  --color-primary-600: oklch(0.596 0.145 163.225);
  --color-primary-700: oklch(0.508 0.118 165.612);
  --color-primary-800: oklch(0.432 0.095 166.913);
  --color-primary-900: oklch(0.378 0.077 168.94);
  --color-primary-950: oklch(0.262 0.051 172.552);
}
